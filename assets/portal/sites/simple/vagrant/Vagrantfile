Vagrant.configure(2) do |config|
  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://atlas.hashicorp.com/search.
  config.vm.box = "{{.variables.provisioners.vagrant.variables.image}}"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a private network
  config.vm.network "private_network", type: "dhcp"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.


  # Taken from here: http://foo-o-rama.com/vagrant--stdin-is-not-a-tty--fix.html
  config.vm.provision "fix-no-tty", type: "shell" do |s|
        s.privileged = false
        s.inline = "sudo sed -i '/tty/!s/mesg n/tty -s \\&\\& mesg n/' /root/.profile"
  end

  # fix grub to turn on memory cgroup
  config.vm.provision "shell", inline: <<-SHELL
    #sed -i -e 's/GRUB_CMDLINE_LINUX_DEFAULT.*$/GRUB_CMDLINE_LINUX_DEFAULT=\"cgroup_enable=memory swapaccount=1\"/'  /etc/default/grub
    #update-grub
    echo "[SITE] updated GRUB"
    echo $(netstat -rn | grep UG | awk '{print $2}') {{ .variables.system.teleport_proxy_address }} >> /etc/hosts
    echo "[SITE] Set up /etc/hosts "
    {{ .variables.system.instructions }}
  SHELL

  {{ range $index, $server := .servers }}  
  config.vm.define "{{$.variables.system.site_domain}}-{{$index}}" do |node|
    node.vm.hostname = "{{$.variables.system.site_domain}}-{{$index}}"
    node.vm.provider "virtualbox" do |vb|
      vb.cpus = {{ $server.CPU.MinCount }}
      vb.memory = {{ $server.RAM.MinFreeMB }}
    end
  end
  {{ end }}

end
